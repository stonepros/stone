#!/bin/sh
# vim: set noet ts=8:
# postinst script for stoneadm
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#
# 	postinst configure <most-recently-configured-version>
# 	old-postinst abort-upgrade <new-version>
# 	conflictor's-postinst abort-remove in-favour <package> <new-version>
# 	postinst abort-remove
# 	deconfigured's-postinst abort-deconfigure in-favour <failed-install-package> <version> [<removing conflicting-package> <version>]
#

# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    configure)
       # create stoneadm user
       # 1. create user if not existing
       if ! getent passwd | grep -q "^stoneadm:"; then
         echo -n "Adding system user stoneadm.."
         adduser --quiet --system --disabled-password --gecos 'stoneadm user for mgr/stoneadm' --shell /bin/bash stoneadm 2>/dev/null || true
         echo "..done"
       fi

       # 2. make sure user is unlocked
       if [ -f /etc/shadow ]; then
           usermod -U -e '' stoneadm
       else
           usermod -U stoneadm
       fi

       # set up (initially empty) .ssh/authorized_keys file
       if ! test -d /home/stoneadm/.ssh; then
	   mkdir /home/stoneadm/.ssh
	   chown --reference /home/stoneadm /home/stoneadm/.ssh
	   chmod 0700 /home/stoneadm/.ssh
       fi
       if ! test -e /home/stoneadm/.ssh/authorized_keys; then
	   touch /home/stoneadm/.ssh/authorized_keys
	   chown --reference /home/stoneadm /home/stoneadm/.ssh/authorized_keys
	   chmod 0600 /home/stoneadm/.ssh/authorized_keys
       fi

    ;;
    abort-upgrade|abort-remove|abort-deconfigure)
	:
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
